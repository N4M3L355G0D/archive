.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "CPUTOOL" "8" "10 June 2017" "" ""

.SH NAME
cputool \- CPUTool is a utility which manages CPU usage and system load
.SH SYNOPSIS

\fBcputool\fR [ \fB--cpu-limit \fIPCNT\fB\fR ] [ \fB--load-limit \fILOAD\fB\fR ] [ [ \fB--pid \fIPID\fB\fR | \fB--pid-pgrp \fIPID\fB\fR ] \fB [ -- ]  \fICOMMAND\fB\fI ...\fB\fR ]

.SH "DESCRIPTION"
.PP
Limit the CPU usage of a process or a process group to a given limit and/or suspend processes if the system load exceeds a
threshold. CPUTool works by sending SIGSTOP and SIGCONT signals to processes depending on the system load.
.SH "OPTIONS"
.PP
These programs follow the usual GNU command line syntax, with long options starting with two dashes (`-').  A summary of
options is included below.
.TP
\fB-c, --cpu-limit \fIPCNT\fB\fR
Specify the maxium CPU the process / process group can use. Expressed as percentage of total CPU. Eg. 200 is two full
CPUs in a multi processor system. Specify an integer value.
.TP
\fB-l, --load-limit \fILOAD\fB\fR
Specify the maxium load the system may experience for the process process group to continue running. Specifyng a
fractional value is possible (e.g. 3.5).
.TP
\fB-p, --pid \fIPID\fB\fR
Manage the CPU usage of a specific PID. This is the most efficient use of CPUTool as it does not have to walk the
process tree to look for forks of children.
.TP
\fB-P, --pid-pgrp \fIPID\fB\fR
Manage the CPU usage of a specific PID's entire process group. The same can be achieved by specifying a
\fICOMMAND\fR which CPUTool will then execute and manage the process group created by that
command.
.TP
\fB-v, --verbose\fR
Increase the amount of messages printed to stderr.

-vv will additionally show statistical information.

-vvv will addditionally show signals being sent to processes.
.TP
\fB-V, --version\fR
Output version information and exit.
.TP
\fB-h, --help\fR
Display a help page and exit.
.SH "NOTES"
.PP
CPUTool will run on 32-bit and 64-bit Linux systems. It depends on the /proc pseudo-filesystem to detect PIDs and their
resource usage.
.PP
TCP network connections could time out if a process is suspended for extended periods of time (while the load is too high).
Not all programs handle this case well.
.SH "EXAMPLES"
.TP
\fBcputool -p 4711 -c 75\fR
Limit the PID 4711 to 75% use of one CPU core.
.TP
\fBcputool -l 7.5 -- rsync -av /home /backup/`date +%Y-%m-%d`/\fR
Run rsync for a local backup only when the system load does not exceed 7.5. See the note for -l when using program that
relies on TCP network connections.
.SH "SEE ALSO"
.PP
signals (7), kill(1), uptime(1).
.SH "AUTHOR"
.PP
This manual page was written by Daniel Lange and converted to SGML by Nigel Kukard <<nkukard@lbsd.net>>\&. Permission is granted to
copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 any later
version published by the Free Software Foundation.
.PP
On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL-3.
